class Card{constructor(n,t,s,e,i){this.num=n,this.symbol=t,this.x=s,this.y=e,this.width=i,this.height=i+70,this.angle=0,this.isLastCardInColumn=!1,this.column=0,this.inner=document.createElement("div"),this.front=document.createElement("div"),this.back=document.createElement("div"),this.inner.className="card-inner",this.front.className="card-back-side",this.inner.style.zIndex=54}flipCard(n,t){document.querySelector(".cards").querySelectorAll(".first-card-in-column");if(!this.inner.classList.contains("card-front-side")&&this.inner.classList.contains("card-stock")&&!t.isAnimating){let n=t.stock.get(t.indexStock).cardInner;t.isAnimating=!0,n.addEventListener("transitionend",()=>{t.isAnimating=!1,n.style.transform="",n.style.transitionDelay=""}),n.classList.toggle("card-front-side"),t.indexStock>0&&(t.stock.get(t.indexStock-1).cardInner.style.zIndex=t.indexStock-1+13),t.indexStock++}}animeToWinningPile(n,t,s,e,i,r,o){s.style.transform="translate("+e+"px,"+i+"px)rotateY(-180deg)",s.style.zIndex=56,s.addEventListener("transitionend",()=>{s.style.zIndex=n.winningPileInfos[n.symbols.indexOf(t)],n.winningPileInfos[n.symbols.indexOf(t)]++,s.style.top=o+"px",s.style.left=r+"px",s.style.transform="",s.style.transitionDelay="",n.isAnimating=!1})}animeToColumnSpace(n,t,s,e,i,r){t.style.transform="translate("+s+"px,"+e+"px)rotateY(-180deg)",t.style.zIndex=56,t.addEventListener("transitionend",()=>{t.style.zIndex=54,t.style.top=r+"px",t.style.left=i+"px",t.style.transform="",t.style.transitionDelay="",n.isAnimating=!1})}courseDistance(n,t){let s=document.querySelectorAll(".card-winningPile-"+t.symbol),e=s[0].style.top.substring(0,s[0].style.top.length-2),i=s[0].style.left.substring(0,s[0].style.left.length-2),r=t.inner.style.left.substring(0,t.inner.style.left.length-2),o=t.inner.style.top.substring(0,t.inner.style.top.length-2),a=-(o-e),l=-(r-i);this.animeToWinningPile(n,t.symbol,t.inner,l,a,i,e)}manageStockInfos(n,t){this.toggleCard(t.cardToToggle,"card-front-side"),this.toggleCard(t.cardToToggle,"card-front"),this.toggleCard(t.cardToToggle,"card-stock")}moveToEmptyColomn(n,t){let s=document.querySelectorAll(".columns-space"),e=this.identifyCard(t);if(n.emptyColumns.length&&13==e.num&&(e.inner.classList.contains("first-card-in-column")||e.inner.classList.contains("card-front-side"))){let i=parseInt(s[n.emptyColumns[0]].style.top,10),r=parseInt(s[n.emptyColumns[0]].style.left,10),o=parseInt(e.inner.style.left,10),a=parseInt(e.inner.style.top,10),l=-(a-i),c=-(o-r),d=s[n.emptyColumns[0]];e.inner.classList.contains("first-card-in-column")?(e.inner.classList.contains("last-card-in-column")?n.emptyColumns.push(this.column):(e.inner.previousSibling.classList.toggle("first-card-in-column"),e.cardToToggle.classList.contains("card-front")||e.cardToToggle.classList.toggle(e.classToToggle)),this.column=n.emptyColumns.shift(),n.isAnimating=!0,this.animeToColumnSpace(n,e.inner,c,l,r,i)):this.isFromStock(this.inner,t.cardInner)&&(this.toggleCard(e.cardToToggle,"first-card-in-column"),this.manageStockInfos(n,e),n.stock.get(n.indexStock-1).card.column=n.emptyColumns.shift(),this.reshapeStock(n),n.isAnimating=!0,this.animeToColumnSpace(n,e.inner,c,l,r,i)),e.inner.classList.contains("last-card-in-column")||e.inner.classList.toggle("last-card-in-column"),e.inner.addEventListener("transitionend",()=>{d.insertAdjacentElement("afterend",e.inner)})}else this.moveToAnotherCard(n,e,t)}reshapeStock(n){n.stock.delete(n.indexStock-1);for(let t=n.indexStock-1;t<n.stock.size-1;t++)n.stock.set(t,{card:n.stock.get(t+1).card,cardInner:n.stock.get(t+1).cardInner});n.stock.delete(n.stock.size),n.indexStock-=1}identifyCard(n){return this.inner.classList.contains("card-front")?{inner:this.inner,num:this.num,symbol:this.symbol,cardToToggle:this.inner.previousSibling,classToToggle:"card-front"}:{inner:n.cardInner,num:n.card.num,symbol:n.card.symbol,cardToToggle:n.cardInner,classToToggle:"card-stock"}}toggleCard(n,t){n.classList.toggle(t)}isFromStock(n,t){return!(!n.classList.contains("card-front-side")||!t.classList.contains("card-front-side"))}moveToWinningPile(n,t){let s=this.identifyCard(t),e=n.winningPileInfos[n.symbols.indexOf(s.symbol)],i=document.querySelectorAll(".card-winningPile-"+s.symbol);e==s.num-1?(s.inner.classList.contains("first-card-in-column")?(this.toggleCard(s.inner,"first-card-in-column"),s.cardToToggle.classList.contains("card-front")||s.cardToToggle.classList.toggle(s.classToToggle),s.inner.classList.contains("last-card-in-column")?(n.emptyColumns.push(this.column),this.toggleCard(s.inner,"last-card-in-column")):this.toggleCard(s.inner.previousSibling,"first-card-in-column"),n.isAnimating=!0,this.courseDistance(n,s)):this.isFromStock(this.inner,t.cardInner)&&(this.manageStockInfos(n,s),this.reshapeStock(n),n.isAnimating=!0,this.courseDistance(n,s)),s.inner.addEventListener("transitionend",()=>{i[0].insertAdjacentElement("afterend",s.inner)})):this.moveToEmptyColomn(n,t)}checkWinningPile(n){n.winningPileInfos[n.symbols.indexOf(this.symbol)];if(!n.isAnimating&&(this.inner.classList.contains("card-front-side")||this.inner.classList.contains("card-front"))){let t=n.stock.get(n.indexStock-1);this.moveToWinningPile(n,t)}}convert(n){return"A"==n?1:"V"==n?11:"D"==n?12:"R"==n?13:parseInt(n)}sendToCard(n,t,s){let e=parseInt(s.style.top,10),i=parseInt(s.style.left,10),r=parseInt(t.inner.style.top,10),o=parseInt(t.inner.style.left,10),a=-(r-e),l=-(o-i);return a+=50,e=parseInt(e,10)+50,this.animeToColumnSpace(n,t.inner,l,a,i,e),s.classList.toggle("first-card-in-column"),!0}isInverse(n,t){return"club"==t||"spade"==t?"diamond"==n||"heart"==n:("diamond"==t||"heart"==t)&&("club"==n||"spade"==n)}moveToAnotherCard(n,t,s){let e=document.querySelector(".cards").querySelectorAll(".first-card-in-column"),i=!1;e.forEach(e=>{this.convert(e.innerText)==t.num+1&&this.isInverse(t.symbol,e.symbol)&&!i&&(t.inner.classList.contains("first-card-in-column")?(t.cardToToggle.classList.contains("card-front")||t.cardToToggle.classList.toggle(t.classToToggle),t.inner.classList.contains("last-card-in-column")?(n.emptyColumns.push(this.column),this.toggleCard(t.inner,"last-card-in-column")):this.toggleCard(t.inner.previousSibling,"first-card-in-column"),n.isAnimating=!0,i=this.sendToCard(n,t,e)):this.isFromStock(this.inner,s.cardInner)&&(this.toggleCard(t.cardToToggle,"first-card-in-column"),this.manageStockInfos(n,t),this.reshapeStock(n),n.isAnimating=!0,i=this.sendToCard(n,t,e)),t.inner.addEventListener("transitionend",()=>{e.insertAdjacentElement("afterend",t.inner)}))})}}