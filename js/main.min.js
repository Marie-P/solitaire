class Controller{constructor(){this.view=new View,this.model=new Model(1050,0),this.model.setCards(this.view.canvas)}loop(t){}}window.addEventListener("load",()=>new Main);class Main{constructor(){this.controller=new Controller,this._loop=null,this.load()}async load(){document.body.appendChild(this.controller.view.cards),this.controller.view.drawGame(this.controller.model)}start(){this._loop=window.setInterval(t=>this.controller.loop(t),100)}stop(){window.clearInterval(this._loop)}}class Model{constructor(t,s){this.cards=[],this.winningPile=[],this.columnsSpace=[],this.emptyColumns=[],this.isAnimating=!1,this.winningPileInfos=[0,0,0,0],this.symbols=["club","spade","diamond","heart"],this.stockX=t,this.stockY=s,this.stock=new Map,this.indexStock=0,this.iter=null}shuffleArray(t){for(let s=t.length-1;s>0;s--){const n=Math.floor(Math.random()*(s+1));[t[s],t[n]]=[t[n],t[s]]}return t}shuffleDeck(){let t=this.shuffleArray(this.cards);this.cards=t}setCards(){this.symbols.forEach(t=>{for(let s=1;s<=13;s++){let n=new Card(s,t,0,0,130);n.inner.symbol=t,this.cards.push(n)}}),this.shuffleDeck()}setStock(){let t=0;this.cards.forEach(s=>{s.inner.classList.contains("card-stock")&&(s.x=this.stockX,s.y=this.stockY,this.stock.set(23-t,{card:s,cardInner:s.inner}),t++)})}setColumn(){let t=250,s=150,n=1,e=1;this.cards.forEach(i=>{n>e&&(t=250,s+=150,e++,n=1),i.column=e-1,i.inner.classList.toggle("column-"+i.column),1==n&&e<=7&&(i.isLastCardInColumn=!0,i.inner.classList.toggle("last-card-in-column")),n==e&&e<=7&&i.inner.classList.toggle("first-card-in-column"),e<=7?(n==e&&i.inner.classList.toggle("card-front"),i.x=s,i.y=t,t+=25,n++):(i.inner.classList.toggle("card-stock"),i.isLastCardInColumn=!1)})}}class View{constructor(){this.cards=document.createElement("div"),this.returnCards=document.createElement("div")}otherThanNumber(t){let s=["V","D","R"];return s[t-11]}drawSymbol(t){let s=new Image(t.width,t.height);return s.src="./assets/"+t.symbol+".png",s.style.left=t.x+"px",s.style.top=t.y+"px",s}drawNumber(t){let s=document.createElement("p");return s.innerHTML=1==t.num?"A":t.num>10?this.otherThanNumber(t.num):t.num,s.style.color="diamond"==t.symbol?"#FF0000":"heart"==t.symbol?"#FF0000":"#000000",s.style.fontSize="25px",s.style.position="absolute",s.style.left="5px",s.style.top="-20px",s}drawFront(t,s,n){t.front.appendChild(s),t.front.appendChild(n),t.inner.appendChild(t.front)}drawBack(t){let s=new Image(t.width,t.height);s.style.left=t.x+"px",s.style.top=t.y+"px",s.src="./assets/back.png",t.back.appendChild(s),t.inner.appendChild(t.back)}drawInner(t){t.inner.style.left=t.x+"px",t.inner.style.top=t.y+"px"}drawCard(t,s){t.inner.addEventListener("mousedown",t=>{t.preventDefault()}),t.inner.addEventListener("click",t.checkWinningPile.bind(t,s)),t.inner.addEventListener("click",t.flipCard.bind(t,this.cards,s));let n=this.drawSymbol(t),e=this.drawNumber(t);t.inner.classList.contains("card-front")?this.drawFront(t,n,e):(this.drawFront(t,n,e),this.drawBack(t)),this.drawInner(t),this.cards.appendChild(t.inner);let i=document.querySelectorAll(".cards");i.forEach(s=>{s.style.width=t.width+"px",s.style.height=t.height+"px",s.style.perspective="1000px",s.style.position="absolute"})}functionTransitionEnd(t,s,n){!n.classList.contains("card-front-side")&&n.classList.contains("card-stock")&&s.forEach(e=>{e.style.zIndex=54,n.removeEventListener("transitionend",this.functionTransitionEnd.bind(this,t,s,n))})}functionTransitionStart(t,s){!t.classList.contains("card-front-side")&&t.classList.contains("card-stock")&&(t.style.zIndex=s,t.removeEventListener("transitionstart",this.functionTransitionStart.bind(this,t,s)))}test(t,s,n,e){let i=s[n];i.style.transitionDelay=e+"ms",i.classList.toggle("card-front-side"),e+=100,i.transitionStartAdded||(i.addEventListener("transitionstart",this.functionTransitionStart.bind(this,i,n)),i.transitionStartAdded=!0),i.nextSibling.classList.contains("returnCards")?(console.log(i),t.isAnimating=!1,t.indexStock=0,i.transitionEndAdded||(i.addEventListener("transitionend",this.functionTransitionEnd.bind(this,t,s,i)),i.transitionEndAdded=!0)):this.test(t,s,n+1,e)}getBackCards(t){t.isAnimating=!0;let s=document.querySelector(".cards").querySelectorAll(".card-stock"),n=0;this.cards.childNodes[n];t.isAnimating=!0,this.test(t,s,0,50)}drawWinningPile(t){let s=["card-winningPile-club","card-winningPile-spade","card-winningPile-diamond","card-winningPile-heart"];for(let n=0,e=150;n<4;n++,e+=150)t.winningPile[n]=document.createElement("div"),t.winningPile[n].className=s[n],t.winningPile[n].style.left=e+"px",t.winningPile[n].style.top="20px",t.winningPile[n].style.width=t.cards[0].width-10+"px",t.winningPile[n].style.height=t.cards[0].height-10+"px",this.cards.appendChild(t.winningPile[n])}drawSpacesColumns(t){for(let s=0,n=150;s<7;s++,n+=150)t.columnsSpace[s]=document.createElement("div"),t.columnsSpace[s].className="columns-space",t.columnsSpace[s].style.left=n+"px",t.columnsSpace[s].style.top="250px",t.columnsSpace[s].style.width=t.cards[0].width-10+"px",t.columnsSpace[s].style.height=t.cards[0].height-10+"px",this.cards.appendChild(t.columnsSpace[s]),this.addCardToColumn(t,s);this.addCardToColumn(t,7)}addCardToColumn(t,s){t.cards.forEach(n=>{n.column==s&&this.drawCard(n,t)})}drawReturnCards(t){this.returnCards.className="returnCards",this.returnCards.style.position="absolute",this.returnCards.style.left=t.stockX+"px",this.returnCards.style.top=t.stockY+"px",this.returnCards.style.width=t.cards[0].width-10+"px",this.returnCards.style.height=t.cards[0].height-10+"px";let s=document.createElement("p");s.innerHTML="&#8634",s.style.fontSize="80px",this.returnCards.appendChild(s),this.returnCards.zIndex=-1,this.cards.appendChild(this.returnCards),this.returnCards.addEventListener("click",this.getBackCards.bind(this,t))}drawGame(t){this.cards.className="cards",this.drawWinningPile(t),t.setColumn(),t.setStock(),this.drawSpacesColumns(t),this.drawReturnCards(t)}}